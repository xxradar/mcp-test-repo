name: Docker Image Test

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
      
    - name: Build Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        push: false
        load: true
        tags: app:test
        cache-from: type=gha
        cache-to: type=gha,mode=max
    
    - name: Save Docker image as tar
      run: |
        mkdir -p image-artifact
        docker save app:test > image-artifact/app-image.tar
        
    - name: Upload Docker image as artifact
      uses: actions/upload-artifact@v3
      with:
        name: docker-image
        path: image-artifact/app-image.tar
        retention-days: 
        
    - name: Run Docker container
      run: |
        docker run -d -p 8000:8000 --name app-container app:test
        # Wait for the container to start
        sleep 5
        
    - name: Test root endpoint
      run: |
        response=$(curl -s -o /dev/null -w "%{http_code}" http://localhost:8000/)
        if [ "$response" -ne 200 ]; then
          echo "Root endpoint test failed with status code: $response"
          exit 1
        fi
        echo "Root endpoint test passed with status code: $response"
        
    - name: Test hello endpoint
      run: |
        response=$(curl -s http://localhost:8000/hello/GitHub)
        expected="{\"message\":\"Hello GitHub\"}"
        if [ "$response" != "$expected" ]; then
          echo "Hello endpoint test failed. Expected: $expected, Got: $response"
          exit 1
        fi
        echo "Hello endpoint test passed"
        
    - name: Check container logs
      if: always()
      run: docker logs app-container
      
    - name: Stop container
      if: always()
      run: docker stop app-container || true
